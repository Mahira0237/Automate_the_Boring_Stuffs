1. What is the function that creates Regex objects?
re.compile()

2. Why are raw strings often used when creating Regex objects?
Raw strings are frequently used when creating Regex objects because 
they allow you to write regular expressions containing backslashes without needing to escape them

3. What does the search() method return?
the search() method returns a Match object.

4. How do you get the actual strings that match the pattern from a Match object?
The Match object’s group() method return a string of the actual matched text.

5. In the regex created from r'(\d\d\d)-(\d\d\d-\d\d\d\d)', what does group 0 cover? Group 1? Group 2?
The first set of parentheses in a regex string will be group 1. The second set will be group 2. 
Passing 0 or nothing to the group() method will return the entire matched text.

6. Parentheses and periods have specific meanings in regular expression syntax. How would you specify
that you want a regex to match actual parentheses and period characters?
The \( and \) escape characters in the raw string passed to re.compile() 
will match actual parenthesis characters. If we want to detect these characters as part of
our text pattern, you need to escape them with a backslash: \.  \^  \$  \*  \+  \?  \{  \}  \[  \]  \\  \|  \(  \)

7. The findall() method returns a list of strings or a list of tuples of strings. 
What makes it return one or the other?
findall() will not return a Match object but a list of strings—as long as there are no groups 
in the regular expression. If there are groups in the regular expression, then findall() will 
return a list of tuples.

8. What does the | character signify in regular expressions?
OR operation

9. What two things does the ? character signify in regular expressions?
The ? character can either mean "match zero or one of the preceding group" or 
be used to signify nongreedy matching.

10. What is the difference between the + and * characters in regular expressions?
While * means “match zero or more,” the + (or plus) means “match one or more.” 
Unlike the star, which does not require its group to appear in the matched string, 
the group preceding a plus must appear at least once. It is not optional. 

11. What is the difference between {3} and {3,5} in regular expressions?
{3} can match three instances of a string. And {3,5} can match three,four or five instances of a string.

12. What do the \d, \w, and \s shorthand character classes signify in regular expressions?
\d Any numeric digit from 0 to 9.
\w Any letter, numeric digit, or the underscore character.
\s Any space, tab, or newline character.

13. What do the \D, \W, and \S shorthand character classes signify in regular expressions?
\D Any character that is not a numeric digit from 0 to 9.
\W Any character that is not a letter, numeric digit, or the underscore character.
\S Any character that is not a space, tab, or newline.

14. What is the difference between .* and .*??
The dot-star uses greedy mode: It will always try to match as much text as possible. 
To match any and all text in a non-greedy fashion, the dot, star, and question mark (.*?) is used.

15. What is the character class syntax to match all numbers and lowercase letters?
[a-z0-9]

16. How do you make a regular expression case-insensitive?
To make regex case-insensitive, we can pass re.IGNORECASE or re.I as a second argument to re.compile().

17. What does the . character normally match? 
What does it match if re.DOTALL is passed as the second argument to re.compile()?
The "." character in a regular expression normally matches any character except a newline character; 
however, if you pass re.DOTALL as the second argument to re.compile(), then the dot will also match 
newline characters, meaning it will match any character including newlines. 

18. If numRegex = re.compile(r'\d+'), 
what will numRegex.sub('X', '12 drummers, 11 pipers, five rings, 3 hens') return?
X drummers, X pipers, five rings, X hens

19. What does passing re.VERBOSE as the second argument to re.compile() allow you to do?
Ignore whitespace and comments inside the regular expression string.

20. How would you write a regex that matches a number with commas for every three digits?
numRegex = re.compile(r'^(\d{1,3})(,\d{3})*$')

21. How would you write a regex that matches the full name of someone whose last name is Watanabe? 
You can assume that the first name that comes before it will always be one word that begins with a 
capital letter. 
numRegex = re.compile(r'^[A-Z][a-z]*\s*Watanabe$')

22. How would you write a regex that matches a sentence where 
the first word is either Alice, Bob, or Carol; 
the second word is either eats, pets, or throws; 
the third word is apples, cats, or baseballs; and 
the sentence ends with a period? This regex should be case-insensitive. 

numRegex = re.compile(r'(Alice|Bob|Carol)\s(eats|pets|throws)\s(apples|cats|baseballs)\.$',re.I)